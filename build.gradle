plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.liquibase.gradle' version '2.0.4'
}

group = 'com.rogerfitness'
def appVersion = new File("./version.txt").getText()
version = appVersion ?: '0.0.1'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework:spring-aspects'

	//	Prometheus and Grafana metrics
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.0.4'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.10.5'

	//	Utility class
	implementation 'org.apache.commons:commons-lang3:3.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.0'

	//	Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.h2database:h2'

	//	Liquibase cli commands
	liquibaseRuntime 'org.liquibase:liquibase-core:4.8.0'
	liquibaseRuntime 'org.postgresql:postgresql'
	liquibaseRuntime files("src/main/resources")

	//	kafka
	implementation 'org.springframework.kafka:spring-kafka:2.9.0'

	//	Java Security
	implementation 'org.springframework.boot:spring-boot-starter-security:3.1.1'

	//Json Web Token
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//Webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
}

apply plugin: "org.liquibase.gradle"

tasks.register('getArtifactVersion') {
	doLast {
		println version
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


liquibase {
	activities {
		main {
			changeLogFile "db/changelog/db.changelog-master.xml"
			url project.hasProperty('url') ? project.property('url') : ''
			username project.hasProperty('username') ? project.property('username') : ''
			password  project.hasProperty('password') ? project.property('password') : ''
		}
	}
}

